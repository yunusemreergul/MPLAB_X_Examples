

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Apr 08 23:11:48 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0088                     	;# 
   214  0089                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  008E                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294                           
   295                           	psect	nvCOMMON
   296  0077                     __pnvCOMMON:	
   297  0077                     _Slave_TX_Data:	
   298  0077                     	ds	1
   299  000C                     _PIR1bits	set	12
   300  0014                     _SSPCONbits	set	20
   301  0013                     _SSPBUF	set	19
   302  0014                     _SSPCON	set	20
   303  0006                     _PORTB	set	6
   304  000B                     _INTCONbits	set	11
   305  008C                     _PIE1bits	set	140
   306  0091                     _SSPCON2bits	set	145
   307  0094                     _SSPSTATbits	set	148
   308  0087                     _TRISCbits	set	135
   309  0093                     _SSPADD	set	147
   310  0091                     _SSPCON2	set	145
   311  0094                     _SSPSTAT	set	148
   312  0086                     _TRISB	set	134
   313                           
   314                           ; #config settings
   315  0000                     
   316                           	psect	cinit
   317  000F                     start_initialization:	
   318  000F                     __initialization:	
   319                           
   320                           ; Clear objects allocated to BANK0
   321  000F  1283               	bcf	3,5	;RP0=0, select bank0
   322  0010  1303               	bcf	3,6	;RP1=0, select bank0
   323  0011  01A7               	clrf	__pbssBANK0& (0+127)
   324  0012                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327  0012                     __end_of__initialization:	
   328  0012  0183               	clrf	3
   329  0013  120A  118A  289D   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	bssBANK0
   332  0027                     __pbssBANK0:	
   333  0027                     _Slave_RX_Data:	
   334  0027                     	ds	1
   335                           
   336                           	psect	cstackCOMMON
   337  0070                     __pcstackCOMMON:	
   338  0070                     ?_I2C_Slave_ISR_Handler_Function:	
   339  0070                     ?_Initial_Configurations:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_I2C_Slave_Check_Overflow_And_Collision:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ??_I2C_Slave_Check_Overflow_And_Collision:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_I2C_Slave_Transmit:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_I2C_Slave_Receive:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_ISR:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_main:	
   358                           ; 1 bytes @ 0x0
   359                           
   360                           
   361                           ; 1 bytes @ 0x0
   362  0070                     	ds	1
   363  0071                     ??_I2C_Slave_Transmit:	
   364  0071                     ??_I2C_Slave_Receive:	
   365                           ; 1 bytes @ 0x1
   366                           
   367  0071                     I2C_Slave_Transmit@Slave_Tx_Data:	
   368                           ; 1 bytes @ 0x1
   369                           
   370                           
   371                           ; 1 bytes @ 0x1
   372  0071                     	ds	2
   373  0073                     I2C_Slave_Receive@RX_Data:	
   374                           
   375                           ; 1 bytes @ 0x3
   376  0073                     	ds	1
   377  0074                     ??_I2C_Slave_ISR_Handler_Function:	
   378                           
   379                           ; 1 bytes @ 0x4
   380  0074                     	ds	1
   381  0075                     ??_ISR:	
   382                           
   383                           ; 1 bytes @ 0x5
   384  0075                     	ds	2
   385                           
   386                           	psect	cstackBANK0
   387  0020                     __pcstackBANK0:	
   388  0020                     ??_Initial_Configurations:	
   389  0020                     ?_I2C_Slave_Initialize:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0020                     I2C_Slave_Initialize@I2C_Slave_Address:	
   393                           ; 1 bytes @ 0x0
   394                           
   395                           
   396                           ; 1 bytes @ 0x0
   397  0020                     	ds	1
   398  0021                     I2C_Slave_Initialize@I2C_SLEW_OnOff:	
   399                           
   400                           ; 1 bytes @ 0x1
   401  0021                     	ds	1
   402  0022                     I2C_Slave_Initialize@I2C_SMBus_OnOff:	
   403                           
   404                           ; 1 bytes @ 0x2
   405  0022                     	ds	1
   406  0023                     ??_I2C_Slave_Initialize:	
   407                           
   408                           ; 1 bytes @ 0x3
   409  0023                     	ds	2
   410  0025                     I2C_Slave_Initialize@I2C_Slave_Mode:	
   411                           
   412                           ; 1 bytes @ 0x5
   413  0025                     	ds	1
   414  0026                     ??_main:	
   415                           
   416                           ; 1 bytes @ 0x6
   417  0026                     	ds	1
   418                           
   419                           	psect	maintext
   420  009D                     __pmaintext:	
   421 ;;
   422 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   423 ;;
   424 ;; *************** function _main *****************
   425 ;; Defined at:
   426 ;;		line 25 in file "I2C_SLAVECOMMUNICATION_Firmware.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0, pclath, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : B00/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   440 ;;      Params:         0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0
   442 ;;      Temps:          0       1       0       0       0
   443 ;;      Totals:         0       1       0       0       0
   444 ;;Total ram usage:        1 bytes
   445 ;; Hardware stack levels required when called:    5
   446 ;; This function calls:
   447 ;;		_I2C_Slave_Initialize
   448 ;;		_Initial_Configurations
   449 ;; This function is called by:
   450 ;;		Startup code after reset
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           
   455                           ;psect for function _main
   456  009D                     _main:	
   457  009D                     l952:	
   458                           ;incstack = 0
   459                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   460                           
   461                           
   462                           ;I2C_SLAVECOMMUNICATION_Firmware.c: 26:         Initial_Configurations();
   463  009D  120A  118A  20F0  120A  118A  	fcall	_Initial_Configurations
   464  00A2                     l954:	
   465                           
   466                           ;I2C_SLAVECOMMUNICATION_Firmware.c: 27:         I2C_Slave_Initialize(((I2C_Slave_Mode_t)
      +                          0b0110), ((I2C_Slave_Address_t)0x40), ((Slew_Rate_t)1), ((SMBus_t)0));
   467  00A2  3040               	movlw	64
   468  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   469  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   470  00A5  00A6               	movwf	??_main
   471  00A6  0826               	movf	??_main,w
   472  00A7  00A0               	movwf	I2C_Slave_Initialize@I2C_Slave_Address
   473  00A8  01A1               	clrf	I2C_Slave_Initialize@I2C_SLEW_OnOff
   474  00A9  0AA1               	incf	I2C_Slave_Initialize@I2C_SLEW_OnOff,f
   475  00AA  01A2               	clrf	I2C_Slave_Initialize@I2C_SMBus_OnOff
   476  00AB  3006               	movlw	6
   477  00AC  120A  118A  2016  120A  118A  	fcall	_I2C_Slave_Initialize
   478  00B1                     l117:	
   479                           ;I2C_SLAVECOMMUNICATION_Firmware.c: 29:         while(1){
   480                           
   481                           
   482                           ;I2C_SLAVECOMMUNICATION_Firmware.c: 30:             Slave_TX_Data = 0xF0;
   483  00B1  30F0               	movlw	240
   484  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   485  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   486  00B4  00A6               	movwf	??_main
   487  00B5  0826               	movf	??_main,w
   488  00B6  00F7               	movwf	_Slave_TX_Data
   489                           
   490                           ;I2C_SLAVECOMMUNICATION_Firmware.c: 31:             PORTB = Slave_RX_Data;
   491  00B7  0827               	movf	_Slave_RX_Data,w
   492  00B8  0086               	movwf	6	;volatile
   493  00B9  28B1               	goto	l117
   494  00BA  120A  118A  280C   	ljmp	start
   495  00BD                     __end_of_main:	
   496                           
   497                           	psect	text1
   498  00F0                     __ptext1:	
   499 ;; *************** function _Initial_Configurations *****************
   500 ;; Defined at:
   501 ;;		line 12 in file "configurations.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		status,2
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   515 ;;      Params:         0       0       0       0       0
   516 ;;      Locals:         0       0       0       0       0
   517 ;;      Temps:          0       0       0       0       0
   518 ;;      Totals:         0       0       0       0       0
   519 ;;Total ram usage:        0 bytes
   520 ;; Hardware stack levels used:    1
   521 ;; Hardware stack levels required when called:    4
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           
   530                           ;psect for function _Initial_Configurations
   531  00F0                     _Initial_Configurations:	
   532  00F0                     l948:	
   533                           ;incstack = 0
   534                           ; Regs used in _Initial_Configurations: [status,2]
   535                           
   536                           
   537                           ;configurations.c: 17:                 INTCONbits.PEIE = 1;
   538  00F0  170B               	bsf	11,6	;volatile
   539                           
   540                           ;configurations.c: 18:                 INTCONbits.GIE = 1;
   541  00F1  178B               	bsf	11,7	;volatile
   542  00F2                     l950:	
   543                           
   544                           ;configurations.c: 34:                 TRISB = 0x00;
   545  00F2  1683               	bsf	3,5	;RP0=1, select bank1
   546  00F3  1303               	bcf	3,6	;RP1=0, select bank1
   547  00F4  0186               	clrf	6	;volatile
   548                           
   549                           ;configurations.c: 35:                 PORTB = 0x00;
   550  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   551  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   552  00F7  0186               	clrf	6	;volatile
   553  00F8                     l9:	
   554  00F8  0008               	return
   555  00F9                     __end_of_Initial_Configurations:	
   556                           
   557                           	psect	text2
   558  0016                     __ptext2:	
   559 ;; *************** function _I2C_Slave_Initialize *****************
   560 ;; Defined at:
   561 ;;		line 76 in file "I2C.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;  I2C_Slave_Mo    1    wreg     unsigned char 
   564 ;;  I2C_Slave_Ad    1    0[BANK0 ] const unsigned char 
   565 ;;  I2C_SLEW_OnO    1    1[BANK0 ] _Bool 
   566 ;;  I2C_SMBus_On    1    2[BANK0 ] _Bool 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  I2C_Slave_Mo    1    5[BANK0 ] unsigned char 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   578 ;;      Params:         0       3       0       0       0
   579 ;;      Locals:         0       1       0       0       0
   580 ;;      Temps:          0       2       0       0       0
   581 ;;      Totals:         0       6       0       0       0
   582 ;;Total ram usage:        6 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; Hardware stack levels required when called:    4
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function _I2C_Slave_Initialize
   594  0016                     _I2C_Slave_Initialize:	
   595                           
   596                           ;incstack = 0
   597                           ; Regs used in _I2C_Slave_Initialize: [wreg+status,2+status,0]
   598                           ;I2C_Slave_Initialize@I2C_Slave_Mode stored from wreg
   599  0016  1283               	bcf	3,5	;RP0=0, select bank0
   600  0017  1303               	bcf	3,6	;RP1=0, select bank0
   601  0018  00A5               	movwf	I2C_Slave_Initialize@I2C_Slave_Mode
   602  0019                     l920:	
   603                           
   604                           ;I2C.c: 77:         SSPSTAT = (I2C_SLEW_OnOff<<7)|(I2C_SMBus_OnOff<<6);
   605  0019  0822               	movf	I2C_Slave_Initialize@I2C_SMBus_OnOff,w
   606  001A  00A3               	movwf	??_I2C_Slave_Initialize
   607  001B  3006               	movlw	6
   608  001C                     u385:	
   609  001C  1003               	clrc
   610  001D  0DA3               	rlf	??_I2C_Slave_Initialize,f
   611  001E  3EFF               	addlw	-1
   612  001F  1D03               	skipz
   613  0020  281C               	goto	u385
   614  0021  0821               	movf	I2C_Slave_Initialize@I2C_SLEW_OnOff,w
   615  0022  00A4               	movwf	??_I2C_Slave_Initialize+1
   616  0023  3006               	movlw	6
   617  0024                     u395:	
   618  0024  1003               	clrc
   619  0025  0DA4               	rlf	??_I2C_Slave_Initialize+1,f
   620  0026  3EFF               	addlw	-1
   621  0027  1D03               	skipz
   622  0028  2824               	goto	u395
   623  0029  1003               	clrc
   624  002A  0D24               	rlf	??_I2C_Slave_Initialize+1,w
   625  002B  0423               	iorwf	??_I2C_Slave_Initialize,w
   626  002C  1683               	bsf	3,5	;RP0=1, select bank1
   627  002D  1303               	bcf	3,6	;RP1=0, select bank1
   628  002E  0094               	movwf	20	;volatile
   629  002F                     l922:	
   630                           
   631                           ;I2C.c: 78:         SSPCON = (0b00100000)|(I2C_Slave_Mode);
   632  002F  1283               	bcf	3,5	;RP0=0, select bank0
   633  0030  1303               	bcf	3,6	;RP1=0, select bank0
   634  0031  0825               	movf	I2C_Slave_Initialize@I2C_Slave_Mode,w
   635  0032  3820               	iorlw	32
   636  0033  0094               	movwf	20	;volatile
   637  0034                     l924:	
   638                           
   639                           ;I2C.c: 79:         SSPCON2 = 0x01;
   640  0034  3001               	movlw	1
   641  0035  1683               	bsf	3,5	;RP0=1, select bank1
   642  0036  1303               	bcf	3,6	;RP1=0, select bank1
   643  0037  0091               	movwf	17	;volatile
   644  0038                     l926:	
   645                           
   646                           ;I2C.c: 80:         SSPADD = I2C_Slave_Address;
   647  0038  1283               	bcf	3,5	;RP0=0, select bank0
   648  0039  1303               	bcf	3,6	;RP1=0, select bank0
   649  003A  0820               	movf	I2C_Slave_Initialize@I2C_Slave_Address,w
   650  003B  1683               	bsf	3,5	;RP0=1, select bank1
   651  003C  1303               	bcf	3,6	;RP1=0, select bank1
   652  003D  0093               	movwf	19	;volatile
   653  003E                     l928:	
   654                           
   655                           ;I2C.c: 81:         TRISCbits.TRISC3 = 1;
   656  003E  1587               	bsf	7,3	;volatile
   657  003F                     l930:	
   658                           
   659                           ;I2C.c: 82:         TRISCbits.TRISC4 = 1;
   660  003F  1607               	bsf	7,4	;volatile
   661  0040                     l932:	
   662                           
   663                           ;I2C.c: 83:         PIR1bits.SSPIF = 0;
   664  0040  1283               	bcf	3,5	;RP0=0, select bank0
   665  0041  1303               	bcf	3,6	;RP1=0, select bank0
   666  0042  118C               	bcf	12,3	;volatile
   667  0043                     l934:	
   668                           
   669                           ;I2C.c: 84:         PIE1bits.SSPIE = 1;
   670  0043  1683               	bsf	3,5	;RP0=1, select bank1
   671  0044  1303               	bcf	3,6	;RP1=0, select bank1
   672  0045  158C               	bsf	12,3	;volatile
   673  0046                     l65:	
   674  0046  0008               	return
   675  0047                     __end_of_I2C_Slave_Initialize:	
   676                           
   677                           	psect	text3
   678  00E4                     __ptext3:	
   679 ;; *************** function _ISR *****************
   680 ;; Defined at:
   681 ;;		line 20 in file "I2C_SLAVECOMMUNICATION_Firmware.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, status,2, status,0, pclath, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   695 ;;      Params:         0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0
   697 ;;      Temps:          2       0       0       0       0
   698 ;;      Totals:         2       0       0       0       0
   699 ;;Total ram usage:        2 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    3
   702 ;; This function calls:
   703 ;;		_I2C_Slave_ISR_Handler_Function
   704 ;; This function is called by:
   705 ;;		Interrupt level 1
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           
   710                           ;psect for function _ISR
   711  00E4                     _ISR:	
   712  00E4                     i1l942:	
   713                           
   714                           ;I2C_SLAVECOMMUNICATION_Firmware.c: 21:         I2C_Slave_ISR_Handler_Function();
   715  00E4  120A  118A  20BD  120A  118A  	fcall	_I2C_Slave_ISR_Handler_Function
   716  00E9                     i1l112:	
   717  00E9  0876               	movf	??_ISR+1,w
   718  00EA  008A               	movwf	10
   719  00EB  0E75               	swapf	??_ISR^(0+4294967168),w
   720  00EC  0083               	movwf	3
   721  00ED  0EFE               	swapf	btemp,f
   722  00EE  0E7E               	swapf	btemp,w
   723  00EF  0009               	retfie
   724  00F0                     __end_of_ISR:	
   725                           
   726                           	psect	intentry
   727  0004                     __pintentry:	
   728                           ;incstack = 0
   729                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   730                           
   731  0004                     interrupt_function:	
   732  007E                     saved_w	set	btemp
   733  0004  00FE               	movwf	btemp
   734  0005  0E03               	swapf	3,w
   735  0006  00F5               	movwf	??_ISR
   736  0007  080A               	movf	10,w
   737  0008  00F6               	movwf	??_ISR+1
   738  0009  120A  118A  28E4   	ljmp	_ISR
   739                           
   740                           	psect	text4
   741  00BD                     __ptext4:	
   742 ;; *************** function _I2C_Slave_ISR_Handler_Function *****************
   743 ;; Defined at:
   744 ;;		line 37 in file "I2C_SLAVECOMMUNICATION_Firmware.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0, pclath, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0
   760 ;;      Temps:          1       0       0       0       0
   761 ;;      Totals:         1       0       0       0       0
   762 ;;Total ram usage:        1 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    2
   765 ;; This function calls:
   766 ;;		_I2C_Slave_Receive
   767 ;;		_I2C_Slave_Transmit
   768 ;; This function is called by:
   769 ;;		_ISR
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           
   774                           ;psect for function _I2C_Slave_ISR_Handler_Function
   775  00BD                     _I2C_Slave_ISR_Handler_Function:	
   776  00BD                     i1l936:	
   777                           ;incstack = 0
   778                           ; Regs used in _I2C_Slave_ISR_Handler_Function: [wreg+status,2+status,0+pclath+cstack]
   779                           
   780                           
   781                           ;I2C_SLAVECOMMUNICATION_Firmware.c: 39:         if(PIR1bits.SSPIF){
   782  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   783  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   784  00BF  1D8C               	btfss	12,3	;volatile
   785  00C0  28C2               	goto	u40_21
   786  00C1  28C3               	goto	u40_20
   787  00C2                     u40_21:	
   788  00C2  28D4               	goto	i1l124
   789  00C3                     u40_20:	
   790  00C3                     i1l938:	
   791                           
   792                           ;I2C_SLAVECOMMUNICATION_Firmware.c: 40:             I2C_Slave_Transmit(Slave_TX_Data);
   793  00C3  0877               	movf	_Slave_TX_Data,w
   794  00C4  120A  118A  2047  120A  118A  	fcall	_I2C_Slave_Transmit
   795                           
   796                           ;I2C_SLAVECOMMUNICATION_Firmware.c: 41:             Slave_RX_Data = I2C_Slave_Receive();
   797  00C9  120A  118A  2077  120A  118A  	fcall	_I2C_Slave_Receive
   798  00CE  00F4               	movwf	??_I2C_Slave_ISR_Handler_Function
   799  00CF  0874               	movf	??_I2C_Slave_ISR_Handler_Function,w
   800  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   801  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   802  00D2  00A7               	movwf	_Slave_RX_Data
   803  00D3                     i1l940:	
   804                           
   805                           ;I2C_SLAVECOMMUNICATION_Firmware.c: 42:             PIR1bits.SSPIF = 0;
   806  00D3  118C               	bcf	12,3	;volatile
   807  00D4                     i1l124:	
   808  00D4  0008               	return
   809  00D5                     __end_of_I2C_Slave_ISR_Handler_Function:	
   810                           
   811                           	psect	text5
   812  0047                     __ptext5:	
   813 ;; *************** function _I2C_Slave_Transmit *****************
   814 ;; Defined at:
   815 ;;		line 96 in file "I2C.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;  Slave_Tx_Dat    1    wreg     unsigned char 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  Slave_Tx_Dat    1    1[COMMON] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         1       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0
   832 ;;      Totals:         1       0       0       0       0
   833 ;;Total ram usage:        1 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    1
   836 ;; This function calls:
   837 ;;		_I2C_Slave_Check_Overflow_And_Collision
   838 ;; This function is called by:
   839 ;;		_I2C_Slave_ISR_Handler_Function
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _I2C_Slave_Transmit
   845  0047                     _I2C_Slave_Transmit:	
   846                           
   847                           ;incstack = 0
   848                           ; Regs used in _I2C_Slave_Transmit: [wreg+status,2+status,0+pclath+cstack]
   849                           ;I2C_Slave_Transmit@Slave_Tx_Data stored from wreg
   850  0047  00F1               	movwf	I2C_Slave_Transmit@Slave_Tx_Data
   851  0048                     i1l880:	
   852                           
   853                           ;I2C.c: 97:         I2C_Slave_Check_Overflow_And_Collision();
   854  0048  120A  118A  20D5  120A  118A  	fcall	_I2C_Slave_Check_Overflow_And_Collision
   855  004D                     i1l882:	
   856                           
   857                           ;I2C.c: 99:             if(SSPSTATbits.D_nA == 0 && SSPSTATbits.R_nW == 1){
   858  004D  1683               	bsf	3,5	;RP0=1, select bank1
   859  004E  1303               	bcf	3,6	;RP1=0, select bank1
   860  004F  1A94               	btfsc	20,5	;volatile
   861  0050  2852               	goto	u28_21
   862  0051  2853               	goto	u28_20
   863  0052                     u28_21:	
   864  0052  2863               	goto	i1l74
   865  0053                     u28_20:	
   866  0053                     i1l884:	
   867  0053  1D14               	btfss	20,2	;volatile
   868  0054  2856               	goto	u29_21
   869  0055  2857               	goto	u29_20
   870  0056                     u29_21:	
   871  0056  2863               	goto	i1l74
   872  0057                     u29_20:	
   873  0057                     i1l886:	
   874                           
   875                           ;I2C.c: 100:                 SSPBUF = Slave_Tx_Data;
   876  0057  0871               	movf	I2C_Slave_Transmit@Slave_Tx_Data,w
   877  0058  1283               	bcf	3,5	;RP0=0, select bank0
   878  0059  1303               	bcf	3,6	;RP1=0, select bank0
   879  005A  0093               	movwf	19	;volatile
   880  005B                     i1l888:	
   881                           
   882                           ;I2C.c: 101:                 SSPCONbits.CKP = 1;
   883  005B  1614               	bsf	20,4	;volatile
   884  005C                     i1l75:	
   885                           ;I2C.c: 102:                 while(SSPSTATbits.BF);
   886                           
   887  005C  1683               	bsf	3,5	;RP0=1, select bank1
   888  005D  1303               	bcf	3,6	;RP1=0, select bank1
   889  005E  1814               	btfsc	20,0	;volatile
   890  005F  2861               	goto	u30_21
   891  0060  2862               	goto	u30_20
   892  0061                     u30_21:	
   893  0061  285C               	goto	i1l75
   894  0062                     u30_20:	
   895  0062  2876               	goto	i1l83
   896  0063                     i1l74:	
   897  0063  1E94               	btfss	20,5	;volatile
   898  0064  2866               	goto	u31_21
   899  0065  2867               	goto	u31_20
   900  0066                     u31_21:	
   901  0066  2876               	goto	i1l83
   902  0067                     u31_20:	
   903  0067                     i1l890:	
   904  0067  1D14               	btfss	20,2	;volatile
   905  0068  286A               	goto	u32_21
   906  0069  286B               	goto	u32_20
   907  006A                     u32_21:	
   908  006A  2876               	goto	i1l83
   909  006B                     u32_20:	
   910  006B                     i1l892:	
   911                           
   912                           ;I2C.c: 104:                 SSPBUF = Slave_Tx_Data;
   913  006B  0871               	movf	I2C_Slave_Transmit@Slave_Tx_Data,w
   914  006C  1283               	bcf	3,5	;RP0=0, select bank0
   915  006D  1303               	bcf	3,6	;RP1=0, select bank0
   916  006E  0093               	movwf	19	;volatile
   917  006F                     i1l894:	
   918                           
   919                           ;I2C.c: 105:                 SSPCONbits.CKP = 1;
   920  006F  1614               	bsf	20,4	;volatile
   921  0070                     i1l80:	
   922                           ;I2C.c: 106:                 while(SSPSTATbits.BF);
   923                           
   924  0070  1683               	bsf	3,5	;RP0=1, select bank1
   925  0071  1303               	bcf	3,6	;RP1=0, select bank1
   926  0072  1814               	btfsc	20,0	;volatile
   927  0073  2875               	goto	u33_21
   928  0074  2876               	goto	u33_20
   929  0075                     u33_21:	
   930  0075  2870               	goto	i1l80
   931  0076                     u33_20:	
   932  0076                     i1l83:	
   933  0076  0008               	return
   934  0077                     __end_of_I2C_Slave_Transmit:	
   935                           
   936                           	psect	text6
   937  0077                     __ptext6:	
   938 ;; *************** function _I2C_Slave_Receive *****************
   939 ;; Defined at:
   940 ;;		line 110 in file "I2C.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  dummy           1    0        unsigned char 
   945 ;;  RX_Data         1    3[COMMON] unsigned char 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      unsigned char 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0, pclath, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         2       0       0       0       0
   957 ;;      Temps:          1       0       0       0       0
   958 ;;      Totals:         3       0       0       0       0
   959 ;;Total ram usage:        3 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    1
   962 ;; This function calls:
   963 ;;		_I2C_Slave_Check_Overflow_And_Collision
   964 ;; This function is called by:
   965 ;;		_I2C_Slave_ISR_Handler_Function
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _I2C_Slave_Receive
   971  0077                     _I2C_Slave_Receive:	
   972  0077                     i1l896:	
   973                           ;incstack = 0
   974                           ; Regs used in _I2C_Slave_Receive: [wreg+status,2+status,0+pclath+cstack]
   975                           
   976                           
   977                           ;I2C.c: 111:         I2C_Slave_Check_Overflow_And_Collision();
   978  0077  120A  118A  20D5  120A  118A  	fcall	_I2C_Slave_Check_Overflow_And_Collision
   979  007C                     i1l898:	
   980                           
   981                           ;I2C.c: 113:             unsigned char RX_Data = 0x00;
   982  007C  01F3               	clrf	I2C_Slave_Receive@RX_Data
   983  007D                     i1l900:	
   984                           
   985                           ;I2C.c: 114:             if(SSPSTATbits.D_nA == 0 && SSPSTATbits.R_nW == 0){
   986  007D  1683               	bsf	3,5	;RP0=1, select bank1
   987  007E  1303               	bcf	3,6	;RP1=0, select bank1
   988  007F  1A94               	btfsc	20,5	;volatile
   989  0080  2882               	goto	u34_21
   990  0081  2883               	goto	u34_20
   991  0082                     u34_21:	
   992  0082  288C               	goto	i1l86
   993  0083                     u34_20:	
   994  0083                     i1l902:	
   995  0083  1914               	btfsc	20,2	;volatile
   996  0084  2886               	goto	u35_21
   997  0085  2887               	goto	u35_20
   998  0086                     u35_21:	
   999  0086  288C               	goto	i1l86
  1000  0087                     u35_20:	
  1001  0087                     i1l904:	
  1002  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1003  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1004  0089  0813               	movf	19,w	;volatile
  1005  008A                     i1l906:	
  1006                           
  1007                           ;I2C.c: 116:                 SSPCONbits.CKP = 1;
  1008  008A  1614               	bsf	20,4	;volatile
  1009                           
  1010                           ;I2C.c: 117:             }else if(SSPSTATbits.D_nA == 1 && SSPSTATbits.R_nW == 0){
  1011  008B  289B               	goto	i1l87
  1012  008C                     i1l86:	
  1013  008C  1E94               	btfss	20,5	;volatile
  1014  008D  288F               	goto	u36_21
  1015  008E  2890               	goto	u36_20
  1016  008F                     u36_21:	
  1017  008F  289B               	goto	i1l87
  1018  0090                     u36_20:	
  1019  0090                     i1l908:	
  1020  0090  1914               	btfsc	20,2	;volatile
  1021  0091  2893               	goto	u37_21
  1022  0092  2894               	goto	u37_20
  1023  0093                     u37_21:	
  1024  0093  289B               	goto	i1l87
  1025  0094                     u37_20:	
  1026  0094                     i1l910:	
  1027                           
  1028                           ;I2C.c: 119:                 RX_Data = SSPBUF;
  1029  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0096  0813               	movf	19,w	;volatile
  1032  0097  00F1               	movwf	??_I2C_Slave_Receive
  1033  0098  0871               	movf	??_I2C_Slave_Receive,w
  1034  0099  00F3               	movwf	I2C_Slave_Receive@RX_Data
  1035  009A                     i1l912:	
  1036                           
  1037                           ;I2C.c: 120:                 SSPCONbits.CKP = 1;
  1038  009A  1614               	bsf	20,4	;volatile
  1039  009B                     i1l87:	
  1040                           
  1041                           ;I2C.c: 122:         return RX_Data;
  1042  009B  0873               	movf	I2C_Slave_Receive@RX_Data,w
  1043  009C                     i1l89:	
  1044  009C  0008               	return
  1045  009D                     __end_of_I2C_Slave_Receive:	
  1046                           
  1047                           	psect	text7
  1048  00D5                     __ptext7:	
  1049 ;; *************** function _I2C_Slave_Check_Overflow_And_Collision *****************
  1050 ;; Defined at:
  1051 ;;		line 87 in file "I2C.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;		None
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  dummy           1    0        unsigned char 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065 ;;      Params:         0       0       0       0       0
  1066 ;;      Locals:         1       0       0       0       0
  1067 ;;      Temps:          0       0       0       0       0
  1068 ;;      Totals:         1       0       0       0       0
  1069 ;;Total ram usage:        1 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; This function calls:
  1072 ;;		Nothing
  1073 ;; This function is called by:
  1074 ;;		_I2C_Slave_Transmit
  1075 ;;		_I2C_Slave_Receive
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           
  1080                           ;psect for function _I2C_Slave_Check_Overflow_And_Collision
  1081  00D5                     _I2C_Slave_Check_Overflow_And_Collision:	
  1082  00D5                     i1l868:	
  1083                           ;incstack = 0
  1084                           ; Regs used in _I2C_Slave_Check_Overflow_And_Collision: [wreg]
  1085                           
  1086                           
  1087                           ;I2C.c: 88:         if((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1088  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1089  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1090  00D7  1B14               	btfsc	20,6	;volatile
  1091  00D8  28DA               	goto	u26_21
  1092  00D9  28DB               	goto	u26_20
  1093  00DA                     u26_21:	
  1094  00DA  28DF               	goto	i1l872
  1095  00DB                     u26_20:	
  1096  00DB                     i1l870:	
  1097  00DB  1F94               	btfss	20,7	;volatile
  1098  00DC  28DE               	goto	u27_21
  1099  00DD  28DF               	goto	u27_20
  1100  00DE                     u27_21:	
  1101  00DE  28E3               	goto	i1l71
  1102  00DF                     u27_20:	
  1103  00DF                     i1l872:	
  1104  00DF  0813               	movf	19,w	;volatile
  1105  00E0                     i1l874:	
  1106                           
  1107                           ;I2C.c: 90:             SSPCONbits.SSPOV = 0;
  1108  00E0  1314               	bcf	20,6	;volatile
  1109  00E1                     i1l876:	
  1110                           
  1111                           ;I2C.c: 91:             SSPCONbits.WCOL = 0;
  1112  00E1  1394               	bcf	20,7	;volatile
  1113  00E2                     i1l878:	
  1114                           
  1115                           ;I2C.c: 92:             SSPCONbits.CKP = 1;
  1116  00E2  1614               	bsf	20,4	;volatile
  1117  00E3                     i1l71:	
  1118  00E3  0008               	return
  1119  00E4                     __end_of_I2C_Slave_Check_Overflow_And_Collision:	
  1120  007E                     btemp	set	126	;btemp
  1121  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      7       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_I2C_Slave_ISR_Handler_Function
    _I2C_Slave_ISR_Handler_Function->_I2C_Slave_Receive
    _I2C_Slave_Transmit->_I2C_Slave_Check_Overflow_And_Collision
    _I2C_Slave_Receive->_I2C_Slave_Check_Overflow_And_Collision

Critical Paths under _main in BANK0

    _main->_I2C_Slave_Initialize

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     316
                                              6 BANK0      1     1      0
               _I2C_Slave_Initialize
             _Initial_Configurations
 ---------------------------------------------------------------------------------
 (1) _Initial_Configurations                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Initialize                                 6     3      3     316
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0      71
                                              5 COMMON     2     2      0
     _I2C_Slave_ISR_Handler_Function
 ---------------------------------------------------------------------------------
 (3) _I2C_Slave_ISR_Handler_Function                       1     1      0      71
                                              4 COMMON     1     1      0
                  _I2C_Slave_Receive
                 _I2C_Slave_Transmit
 ---------------------------------------------------------------------------------
 (4) _I2C_Slave_Transmit                                   1     1      0      45
                                              1 COMMON     1     1      0
_I2C_Slave_Check_Overflow_And_Collis
 ---------------------------------------------------------------------------------
 (4) _I2C_Slave_Receive                                    3     3      0      26
                                              1 COMMON     3     3      0
_I2C_Slave_Check_Overflow_And_Collis
 ---------------------------------------------------------------------------------
 (5) _I2C_Slave_Check_Overflow_And_Collision               1     1      0       1
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Initialize
   _Initial_Configurations

 _ISR (ROOT)
   _I2C_Slave_ISR_Handler_Function
     _I2C_Slave_Receive
       _I2C_Slave_Check_Overflow_And_Collision
     _I2C_Slave_Transmit
       _I2C_Slave_Check_Overflow_And_Collision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Apr 08 23:11:48 2021

                                              l9 00F8                                      __CFG_CP$OFF 0000  
                                    _SSPSTATbits 0094                                               l65 0046  
                 __end_of_Initial_Configurations 00F9                                              l117 00B1  
                                            l920 0019                                              l930 003F  
                                            l922 002F                                              l932 0040  
                                            l924 0034                                              l934 0043  
                                            l926 0038                                              l950 00F2  
                                            l928 003E                                              l952 009D  
                                            l954 00A2                                              l948 00F0  
                                   __CFG_CPD$OFF 0000                                              _ISR 00E4  
                                            u385 001C                                              u395 0024  
                                   __CFG_FOSC$HS 0000                                     __CFG_LVP$OFF 0000  
                                           ?_ISR 0070                                             i1l71 00E3  
                                           i1l80 0070                                             i1l74 0063  
                                           i1l83 0076                                             i1l75 005C  
                                           i1l86 008C                                             i1l87 009B  
                                           i1l89 009C                                     __CFG_WRT$OFF 0000  
                                           _main 009D                                             btemp 007E  
                                  __CFG_BOREN$ON 0000                                             start 000C  
                           _I2C_Slave_Initialize 0016           __end_of_I2C_Slave_ISR_Handler_Function 00D5  
        __size_of_I2C_Slave_ISR_Handler_Function 0018                   _I2C_Slave_ISR_Handler_Function 00BD  
                                          ??_ISR 0075                                            ?_main 0070  
                                  __CFG_WDTE$OFF 0000                                            i1l112 00E9  
                                          i1l124 00D4                                            i1l900 007D  
                                          i1l910 0094                                            i1l902 0083  
                                          i1l912 009A                                            i1l904 0087  
                                          i1l906 008A                                            i1l908 0090  
                                          i1l940 00D3                                            i1l870 00DB  
                                          i1l942 00E4                                            i1l872 00DF  
                                          i1l880 0048                                            i1l936 00BD  
                                          i1l874 00E0                                            i1l890 0067  
                                          i1l882 004D                                            i1l938 00C3  
                                          i1l876 00E1                                            i1l868 00D5  
                                          i1l892 006B                                            i1l884 0053  
                                          i1l878 00E2                                            i1l894 006F  
                                          i1l886 0057                                            i1l896 0077  
                                          i1l888 005B                                            i1l898 007C  
                                          u30_20 0062                                            u30_21 0061  
                                          u31_20 0067                                            u31_21 0066  
                                          u32_20 006B                                            u40_20 00C3  
                                          u32_21 006A                                            u40_21 00C2  
                                          u33_20 0076                                            u33_21 0075  
                                          u26_20 00DB                                            u34_20 0083  
                                          u26_21 00DA                                            u34_21 0082  
                                          u27_20 00DF                                            u35_20 0087  
                                          u27_21 00DE                                            u35_21 0086  
                                          _PORTB 0006                                            u36_20 0090  
                                          u28_20 0053                                            u36_21 008F  
                                          u28_21 0052                                            u37_20 0094  
                                          u29_20 0057                                            u37_21 0093  
                                          u29_21 0056                                            _TRISB 0086  
                                          pclath 000A                                            status 0003  
                                          wtemp0 007E                            ?_I2C_Slave_Initialize 0020  
                                __initialization 000F                                     __end_of_main 00BD  
                                         ??_main 0026                                           _SSPADD 0093  
                                         _SSPCON 0014                                           _SSPBUF 0013  
                                 __CFG_PWRTE$OFF 0000                                           saved_w 007E  
                     __end_of_I2C_Slave_Transmit 0077                          __end_of__initialization 0012  
                         ??_I2C_Slave_Initialize 0023                                   __pcstackCOMMON 0070  
                                     __pbssBANK0 0027                                       __pnvCOMMON 0077  
                                     __pmaintext 009D                                       __pintentry 0004  
                                        _SSPCON2 0091                                          _SSPSTAT 0094  
          I2C_Slave_Initialize@I2C_Slave_Address 0020                                          __ptext1 00F0  
                                        __ptext2 0016                                          __ptext3 00E4  
                                        __ptext4 00BD                                          __ptext5 0047  
                                        __ptext6 0077                                          __ptext7 00D5  
                                   __size_of_ISR 000C                             end_of_initialization 0012  
                       ??_Initial_Configurations 0020                                        _TRISCbits 0087  
                       I2C_Slave_Receive@RX_Data 0073                               _I2C_Slave_Transmit 0047  
                            ?_I2C_Slave_Transmit 0070                              start_initialization 000F  
                                    __end_of_ISR 00F0                             ??_I2C_Slave_Transmit 0071  
                                  _Slave_RX_Data 0027                                    _Slave_TX_Data 0077  
                  __size_of_I2C_Slave_Initialize 0031                  __size_of_Initial_Configurations 0009  
                                      ___latbits 0002                                    __pcstackBANK0 0020  
             I2C_Slave_Initialize@I2C_SLEW_OnOff 0021   __end_of_I2C_Slave_Check_Overflow_And_Collision 00E4  
__size_of_I2C_Slave_Check_Overflow_And_Collision 000F         ??_I2C_Slave_Check_Overflow_And_Collision 0070  
        ?_I2C_Slave_Check_Overflow_And_Collision 0070           _I2C_Slave_Check_Overflow_And_Collision 00D5  
                I2C_Slave_Transmit@Slave_Tx_Data 0071                           _Initial_Configurations 00F0  
                              interrupt_function 0004                                         _PIE1bits 008C  
                                       _PIR1bits 000C                                _I2C_Slave_Receive 0077  
                             ?_I2C_Slave_Receive 0070                 ??_I2C_Slave_ISR_Handler_Function 0074  
                ?_I2C_Slave_ISR_Handler_Function 0070                              ??_I2C_Slave_Receive 0071  
                      __end_of_I2C_Slave_Receive 009D                                    __size_of_main 0020  
             I2C_Slave_Initialize@I2C_Slave_Mode 0025                     __end_of_I2C_Slave_Initialize 0047  
                                     _INTCONbits 000B                                         intlevel1 0000  
                    __size_of_I2C_Slave_Transmit 0030                       __size_of_I2C_Slave_Receive 0026  
                        ?_Initial_Configurations 0070                                      _SSPCON2bits 0091  
            I2C_Slave_Initialize@I2C_SMBus_OnOff 0022                                       _SSPCONbits 0014  
